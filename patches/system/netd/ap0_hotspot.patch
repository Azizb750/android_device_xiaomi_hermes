From 7ed250935d6dea5391d0297728da9a07b6b3e65d Mon Sep 17 00:00:00 2001
From: Dinolek <dinolek@o2.pl>
Date: Wed, 25 Jul 2018 16:34:29 +0200
Subject: [PATCH] temp

Change-Id: I173bce3cdf74ad99121e53689ad74da49b0ca79e
---
 server/NatController.cpp    | 2 +-
 server/RouteController.cpp  | 6 +++---
 server/SoftapController.cpp | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/server/NatController.cpp b/server/NatController.cpp
index cda8f5f..299bf65 100644
--- a/server/NatController.cpp
+++ b/server/NatController.cpp
@@ -376,7 +376,7 @@ int NatController::setForwardRules(bool add, const char *intIface, const char *e
         goto err_return;
     }
 
-    if (runCmd(ARRAY_SIZE(cmd4), cmd4) && add) {
+    if (runCmd(ARRAY_SIZE(cmd4), cmd4) && add && false) {
         rc = -1;
         goto err_rpfilter;
     }
diff --git a/server/RouteController.cpp b/server/RouteController.cpp
index 4de3c9a..c03b462 100644
--- a/server/RouteController.cpp
+++ b/server/RouteController.cpp
@@ -45,7 +45,7 @@ namespace {
 // BEGIN CONSTANTS --------------------------------------------------------------------------------
 
 const uint32_t RULE_PRIORITY_VPN_OVERRIDE_SYSTEM = 10000;
-const uint32_t RULE_PRIORITY_VPN_OVERRIDE_OIF    = 10500;
+//const uint32_t RULE_PRIORITY_VPN_OVERRIDE_OIF    = 10500;
 const uint32_t RULE_PRIORITY_VPN_OUTPUT_TO_LOCAL = 11000;
 const uint32_t RULE_PRIORITY_SECURE_VPN          = 12000;
 const uint32_t RULE_PRIORITY_PROHIBIT_NON_VPN    = 12500;
@@ -586,13 +586,13 @@ WARN_UNUSED_RESULT int modifyOutputInterfaceRules(const char* interface, uint32_
 
     // If this rule does not specify a UID range, then also add a corresponding high-priority rule
     // for UID. This covers forwarded packets and system daemons such as the tethering DHCP server.
-    if (uidStart == INVALID_UID && uidEnd == INVALID_UID) {
+    /*if (uidStart == INVALID_UID && uidEnd == INVALID_UID) {
         if (int ret = modifyIpRule(add ? RTM_NEWRULE : RTM_DELRULE, RULE_PRIORITY_VPN_OVERRIDE_OIF,
                                    table, fwmark.intValue, mask.intValue, IIF_NONE, interface,
                                    UID_ROOT, UID_ROOT)) {
             return ret;
         }
-    }
+    }*/
 
     return modifyIpRule(add ? RTM_NEWRULE : RTM_DELRULE, RULE_PRIORITY_OUTPUT_INTERFACE, table,
                         fwmark.intValue, mask.intValue, IIF_NONE, interface, uidStart, uidEnd);
diff --git a/server/SoftapController.cpp b/server/SoftapController.cpp
index 4a7c8d7..fa6650a 100755
--- a/server/SoftapController.cpp
+++ b/server/SoftapController.cpp
@@ -53,7 +53,7 @@ using android::base::WriteStringToFile;
 #include "wpa_ctrl.h"
 #endif
 
-std:: string hostapd_unix_file(StringPrintf("/data/misc/wifi/hostapd/wlan0"));
+std:: string hostapd_unix_file(StringPrintf("/data/misc/wifi/hostapd/ap0"));
 #ifdef LIBWPA_CLIENT_EXISTS
 static const char HOSTAPD_DHCP_DIR[]    = "/data/misc/dhcp";
 #endif
@@ -289,7 +289,7 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
             "hw_mode=%c\n"
             "ignore_broadcast_ssid=%d\n"
             "wowlan_triggers=any\n",
-            argv[2], argv[3], channel, (channel <= 14) ? 'g' : 'a', hidden));
+            "ap0", argv[3], channel, (channel <= 14) ? 'g' : 'a', hidden));
 
     std::string fbuf;
     if (argc > 7) {
-- 
2.7.4

