From adaa0b771d5127aae85bde9747282e8e316760ac Mon Sep 17 00:00:00 2001
From: fire855 <thefire855@gmail.com>
Date: Sun, 17 Jun 2018 18:21:02 +0200
Subject: [PATCH] netd: Add support for ap0 wifi tethering

Change-Id: I7e168b4ecc9ed07c317afd81f47b916828cee255
---
 server/SoftapController.cpp | 54 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

diff --git a/server/SoftapController.cpp b/server/SoftapController.cpp
index b05118e..8149f94 100644
--- a/server/SoftapController.cpp
+++ b/server/SoftapController.cpp
@@ -42,6 +42,7 @@
 #include "wifi.h"
 #include "wifi_fst.h"
 #include "ResponseCode.h"
+#include "cutils/properties.h"
 
 #include "SoftapController.h"
 
@@ -253,6 +254,12 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
     int hidden = 0;
     int channel = AP_CHANNEL_DEFAULT;
 
+#ifdef MTK_HARDWARE
+    char ap_channel[PROPERTY_VALUE_MAX] = {'\0'};
+    const char AP_CHANNEL_PROP_NAME[] = "wifi.tethering.channel";
+    char mode;
+#endif
+
     if (argc < 5) {
         ALOGE("Softap set is missing arguments. Please use:");
         ALOGE("softap <wlan iface> <SSID> <hidden/broadcast> <channel> <wpa2?-psk|open> <passphrase>");
@@ -263,11 +270,27 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
         hidden = 1;
 
     if (argc >= 5) {
+#ifndef MTK_HARDWARE
         channel = atoi(argv[5]);
         if (channel <= 0)
             channel = AP_CHANNEL_DEFAULT;
+#else
+        if (property_get(AP_CHANNEL_PROP_NAME, ap_channel, NULL))
+            channel = atoi(ap_channel);
+        else
+            channel = atoi(argv[5]);
+
+        if (channel < 0) {
+            channel = AP_CHANNEL_DEFAULT;
+            mode = 'g';
+        } else if (channel >= 0 && channel <= 14)
+            mode = 'g'; /* 2.4G channel, 0 will trigger MTK auto channel selection */
+        else
+            mode = 'a'; /* 5G channel */
+#endif
     }
 
+#ifndef MTK_HARDWARE
     std::string wbuf(StringPrintf("interface=%s\n"
             "driver=nl80211\n"
             "ctrl_interface=/data/misc/wifi/hostapd\n"
@@ -278,6 +301,37 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
             "ignore_broadcast_ssid=%d\n"
             "wowlan_triggers=any\n",
             argv[2], argv[3], channel, (channel <= 14) ? 'g' : 'a', hidden));
+#else
+/*
+ * Arguments:
+ *  argv[2] - wlan interface
+ *  argv[3] - SSID
+ *  argv[4] - Broadcast/Hidden
+ *  argv[5] - Channel
+ *  argv[6] - Security
+ *  argv[7] - Key
+ *  argv[8] - Channel width
+ *  argv[9] - Max connection
+ */
+    std::string wbuf;
+    if (argc > 9) {
+        wbuf = StringPrintf("interface=%s\ndriver=nl80211\nctrl_interface="
+            "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
+            "hw_mode=%c\nignore_broadcast_ssid=%d\nmax_num_sta=%d\n"
+            "eap_server=1\nwps_state=2\nconfig_methods=display physical_display push_button\n"
+            "device_name=AndroidAP\nmanufacturer=MediaTek Inc.\nmodel_name=MTK Wireless Model\n"
+            "model_number=66xx\nserial_number=1.0\ndevice_type=10-0050F204-5\nwowlan_triggers=disconnect\n",
+            "ap0", argv[3], channel, mode, hidden, atoi(argv[9]));
+    } else {
+        wbuf = StringPrintf("interface=%s\ndriver=nl80211\nctrl_interface="
+            "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
+            "hw_mode=%c\nignore_broadcast_ssid=%d\n"
+            "eap_server=1\nwps_state=2\nconfig_methods=display physical_display push_button\n"
+            "device_name=AndroidAP\nmanufacturer=MediaTek Inc.\nmodel_name=MTK Wireless Model\n"
+            "model_number=66xx\nserial_number=1.0\ndevice_type=10-0050F204-5\nwowlan_triggers=disconnect\n",
+            "ap0", argv[3], channel, mode, hidden);
+    }
+#endif
 
     std::string fbuf;
     if (argc > 7) {
-- 
2.7.4

